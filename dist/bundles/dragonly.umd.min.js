!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core")):"function"==typeof define&&define.amd?define(["exports","@angular/core"],t):t((e.ng=e.ng||{},e.ng.dragonly={}),e.ng.core)}(this,function(e,t){"use strict";var n=function(e,t,n,o){var r,i=arguments.length,s=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,o);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(s=(i<3?r(s):i>3?r(t,n,s):r(t,n))||s);return i>3&&s&&Object.defineProperty(t,n,s),s},o=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},r=function(){function e(e,t){this.elementRef=e,this.renderer=t}return e.prototype.ngOnInit=function(){var e=this;this.handlersToDestroy=[],this.sessionStorageKey="dragOnlyElementPosition"+this.dragOnly,this.elementPosition=this.calculateInitialPosition(),this.renderer.listen(this.elementRef.nativeElement,"mousedown",function(t){return e.init(t)}),this.update()},e.prototype.init=function(e){var t=this;this.mousePosition=new i(e.clientX,e.clientY),this.handlersToDestroy=[this.renderer.listen("document","mousemove",function(e){return t.calculate(e)}),this.renderer.listen("document","mouseup",function(e){return t.removeHandlers()}),this.renderer.listen("document","contextmenu",function(e){return t.removeHandlers()})]},e.prototype.calculate=function(e){var t=this.mousePosition.diff(new i(e.clientX,e.clientY));this.mousePosition=this.mousePosition.add(t),this.elementPosition=this.elementPosition.add(t),this.update()},e.prototype.removeHandlers=function(){for(var e=0,t=this.handlersToDestroy;e<t.length;e++){var n=t[e];"function"==typeof n&&n()}this.store()},e.prototype.store=function(){try{sessionStorage.setItem(this.sessionStorageKey,JSON.stringify(this.elementPosition))}catch(e){console.log("\n            Your browser does not support sessionStorage and will \n            not store the position of the element after it's closed.\n            Error message: "+e.message)}},e.prototype.read=function(){try{var e=sessionStorage.getItem(this.sessionStorageKey);if(!e)return null;var t=JSON.parse(e);return new i(t.x,t.y)}catch(e){console.log("\n            Your browser does not support sessionStorage and will \n            not store the position of the element after it's closed.\n            Error message: "+e.message)}return null},e.prototype.update=function(){this.renderer.setStyle(this.elementRef.nativeElement,"top",this.elementPosition.y+"px"),this.renderer.setStyle(this.elementRef.nativeElement,"left",this.elementPosition.x+"px")},e.prototype.calculateInitialPosition=function(){var e=this.read();return e instanceof i?e:new i(window.innerWidth/2,window.innerHeight/2)},n([t.Input(),o("design:type",Object)],e.prototype,"dragOnly",void 0),e=n([t.Directive({selector:"[dragOnly]"}),o("design:paramtypes",[t.ElementRef,t.Renderer2])],e)}(),i=function(){function e(e,t){this.x=e,this.y=t}return e.prototype.diff=function(t){return new e(-this.x+t.x,-this.y+t.y)},e.prototype.add=function(t){return new e(this.x+t.x,this.y+t.y)},e}(),s=function(e,t,n,o){var r,i=arguments.length,s=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,o);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(s=(i<3?r(s):i>3?r(t,n,s):r(t,n))||s);return i>3&&s&&Object.defineProperty(t,n,s),s},l=function(){function e(){}return e=s([t.NgModule({declarations:[r],exports:[r]})],e)}();e.DragOnlyModule=l,e.DragOnlyDirective=r,e.EventPosition=i,Object.defineProperty(e,"__esModule",{value:!0})});